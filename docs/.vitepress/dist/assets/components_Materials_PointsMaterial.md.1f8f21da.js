import{_ as l,a as p,b as m}from"./chunks/TextureLoader.vue_vue_type_script_setup_true_lang.fc97b491.js";import{_ as h}from"./chunks/PerspectiveCamera.vue_vue_type_script_setup_true_lang.8e1261b2.js";import{_ as f,a as u}from"./chunks/PointsMaterial.vue_vue_type_script_setup_true_lang.85f46be1.js";import{_ as x}from"./chunks/AxesHelper.vue_vue_type_script_setup_true_lang.acfcb8b0.js";import{_ as P}from"./chunks/BoxGeometry.vue_vue_type_script_setup_true_lang.9731caf5.js";import{V as b}from"./chunks/v-tweakpane.b538878e.js";import{d as y,k as z,o as r,c as d,m as s,a as e,w as n,u as a,e as A,f as c}from"./app.97673a72.js";const T={class:"example-with-props"},g={class:"example"},v={class:"example-props"},C=y({__name:"PointsMaterial",setup(_){const t=z({color:"#000000",size:2,sizeAttenuation:!0,transparent:!1,opacity:1}),i=o=>{o.addInput(t,"color"),o.addInput(t,"size",{min:1,max:10}),o.addInput(t,"sizeAttenuation"),o.addInput(t,"transparent"),o.addInput(t,"opacity",{min:0,max:1})};return(o,M)=>(r(),d("div",T,[s("div",g,[e(a(m),{antialias:!0},{default:n(()=>[e(a(h),{position:[12,12,10],up:[0,0,1]},{default:n(()=>[e(a(l))]),_:1}),e(a(p),{background:"#f9f9f9"},{default:n(()=>[e(a(f),null,{default:n(()=>[e(a(u),{color:t.color,size:t.size,"size-attenuation":t.sizeAttenuation,transparent:t.transparent,opacity:t.opacity},null,8,["color","size","size-attenuation","transparent","opacity"]),e(a(P),{name:"geo",width:10,height:10,depth:10})]),_:1}),e(a(x),{size:10})]),_:1})]),_:1})]),s("div",v,[e(a(b),{pane:{title:"Properties"},onOnPaneCreated:i})])]))}});const S=c('<h1 id="pointsmaterial" tabindex="-1">PointsMaterial <a class="header-anchor" href="#pointsmaterial" aria-hidden="true">#</a></h1><p>A material for drawing <a href="/components/Objects/Points"><code>&lt;Points /&gt;</code></a>.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2>',3),$=c('<h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h2><table><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>color </code></td><td>Color of the material.</td><td>union</td><td>0xffffff</td></tr><tr><td><code>sizeAttenuation</code></td><td>Specify whether points&#39; size is attenuated by the camera depth.<br><em>(Perspective camera only)</em></td><td>boolean</td><td>true</td></tr><tr><td><code>size </code></td><td>Defines the size of the points in pixels.</td><td>number</td><td>1</td></tr><tr><td><code>opacity </code></td><td>Float in the range of <code>0.0 - 1.0</code> indicating how transparent the material is.</td><td>number</td><td>1</td></tr><tr><td><code>transparent </code></td><td>Defines whether this material is transparent.</td><td>boolean</td><td>false</td></tr></tbody></table><hr>',3),B=JSON.parse('{"title":"PointsMaterial","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Props","slug":"props","link":"#props","children":[]}],"relativePath":"components/Materials/PointsMaterial.md"}'),I={name:"components/Materials/PointsMaterial.md"},R=Object.assign(I,{setup(_){return(t,i)=>{const o=A("ClientOnly");return r(),d("div",null,[S,e(o,null,{default:n(()=>[e(C)]),_:1}),$])}}});export{B as __pageData,R as default};
