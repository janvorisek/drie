import{B as Q,t as E,u as X,m as Y,h as p,f as Z,C as x,v as ee,w as te,V as ae,_ as k,a as se,c as D,x as oe,D as w,y as V,b as ne}from"./chunks/TextureLoader.vue_vue_type_script_setup_true_lang.b4507703.js";import{_ as ie}from"./chunks/PerspectiveCamera.vue_vue_type_script_setup_true_lang.ffc1414b.js";import{_ as re}from"./chunks/OrthographicCamera.vue_vue_type_script_setup_true_lang.93bf9128.js";import{_ as j}from"./chunks/LineSegments.vue_vue_type_script_setup_true_lang.58929aae.js";import{_ as M}from"./chunks/Mesh.vue_vue_type_script_setup_true_lang.a0799f25.js";import{d as f,i as y,j as le,p as W,l as ce,g as h,k as I,r as u,h as de,o as N,c as O,m as v,a,w as c,u as t,e as ue,f as L,V as he}from"./app.7a29b974.js";import{_ as me}from"./chunks/OBJLoader.vue_vue_type_script_setup_true_lang.cb59329c.js";import{_ as pe}from"./chunks/AxesHelper.vue_vue_type_script_setup_true_lang.b21dba3e.js";import{_ as _e}from"./chunks/BoxGeometry.vue_vue_type_script_setup_true_lang.f1157175.js";import{_ as fe}from"./chunks/BufferGeometry.vue_vue_type_script_setup_true_lang.0537fc5b.js";import{_ as ge}from"./chunks/PlaneGeometry.vue_vue_type_script_setup_true_lang.47588f08.js";import{_ as ve}from"./chunks/SphereGeometry.vue_vue_type_script_setup_true_lang.36304aa4.js";import{_ as T}from"./chunks/WireframeGeometry.vue_vue_type_script_setup_true_lang.7cbf2494.js";import{_ as G}from"./chunks/LineBasicMaterial.vue_vue_type_script_setup_true_lang.1714f0e7.js";import{V as B}from"./chunks/v-tweakpane.df4be0b1.js";const ye=f({__name:"Points",props:{position:{default:()=>[0,0,0]},rotation:{default:()=>[0,0,0]},scale:{default:()=>[1,1,1]}},setup(d,{expose:o}){const e=d,l=y("scene"),s=new Q,r=new E({color:"red",sizeAttenuation:!1,size:2}),n=new X(s,r);return Y(n),p(e,"position",n),p(e,"rotation",n),p(e,"scale",n),le(()=>{l.remove(n),Z(n)}),W("mesh",n),o({three:n}),(_,g)=>ce(_.$slots,"default")}}),be={name:"PointsMaterial",render:()=>null},we=f({...be,props:{color:{default:16777215},sizeAttenuation:{type:Boolean,default:!0},size:{default:1}},setup(d,{expose:o}){const e=d,l=y("mesh"),s=new E({color:e.color,sizeAttenuation:e.sizeAttenuation,size:e.size});l.material=s;function r(n){n.color&&(s.color=new x(n.color)),n.size&&(s.size=n.size),n.sizeAttenuation!==void 0&&(s.sizeAttenuation=n.sizeAttenuation)}return r(e),h(()=>e.color,()=>r(e)),h(()=>e.size,()=>r(e)),h(()=>e.sizeAttenuation,()=>r(e)),W("material",s),o({three:s}),{props:e,mesh:l,three:s,applyProps:r}}}),Me={name:"AmbientLight",render:()=>null},xe=f({...Me,props:{color:{default:16777215},intensity:{default:1}},setup(d,{expose:o}){const e=d,l=y("scene"),s=new ee;l.add(s);function r(n){s.color=new x(n.color),s.intensity=n.intensity}return r(e),h(()=>e.color,()=>r(e)),h(()=>e.intensity,()=>r(e)),o({three:s}),{props:e,scene:l,three:s,applyProps:r}}}),Pe={name:"PointLight",render:()=>null},$e=f({...Pe,props:{castShadow:{type:Boolean,default:!1},color:{default:16777215},intensity:{default:1},position:{default:()=>[0,0,0]},rotation:{default:()=>[0,0,0]},scale:{default:()=>[1,1,1]}},setup(d,{expose:o}){const e=d,l=y("scene"),s=new te;l.add(s),p(e,"position",s),p(e,"rotation",s),p(e,"scale",s);function r(n){s.color=new x(n.color),s.intensity=n.intensity,s.castShadow=n.castShadow}return r(e),h(()=>e.color,()=>r(e)),h(()=>e.intensity,()=>r(e)),h(()=>e.castShadow,()=>r(e)),o({three:s}),{props:e,scene:l,three:s,applyProps:r}}}),ze={class:"example",style:{height:"200px"}},Ae={style:{display:"flex",gap:"24px","flex-direction":"row","justify-content":"center","margin-top":"24px"}},Se=f({__name:"Welcome",setup(d){const o=I({pos:{x:0,y:0,z:2},s2:1,radius:1,planeWidth:20,planeHeight:5}),e=i=>{i.addInput(o,"pos",{label:"Crate position"}),i.addInput(o,"planeWidth",{label:"Plane width",min:1,max:30}),i.addInput(o,"planeHeight",{label:"Plane height",min:1,max:10})},l=i=>{i.addMonitor(o,"s2",{label:"Crate scale"}),i.addMonitor(o,"radius",{label:"Sphere radius"})},s=u([0,0,2]),r=u([0,0,0]),n=I([]),_=u(1),g=u(1),R=new ae(10,0,0),P=u("rgb(255,0,0)"),$=u("rgb(255,0,0)"),z=u("rgb(255,0,0)");de(()=>{let i=24,b=3,A=2;for(let m=0;m<i;m++){const S=b*Math.cos(2*Math.PI/i*m),J=Math.sin(S),U=A*Math.sin(2*Math.PI/i*m)+J,C=b*Math.cos(2*Math.PI/i*(m+1)),q=Math.sin(C),K=A*Math.sin(2*Math.PI/i*(m+1))+q;n.push(S,U,0),n.push(C,K,0),n.push(0,0,1)}}),window.setInterval(()=>{const i=Date.now()/1e3;P.value=`rgb(${Math.round(Math.cos(i)*50+100)}, ${Math.round((Math.sin(i)+1)/2*200+50)}, 100)`,$.value=`rgb(${Math.round(Math.cos(i)*50+200)}, ${Math.round(Math.sin(i)*50+100)}, 50)`,z.value=`rgb(${Math.round(Math.cos(i*2)*100+100)}, 50, ${Math.round(Math.sin(i)*50+100)})`,o.radius=Math.cos(i)+2,g.value=Math.sin(i*3)*3,o.s2=Math.sin(i*2)*.5+1,_.value=Math.sin(i)+1,r.value=[Math.cos(i)*Math.PI,0,0],s.value=[o.pos.x,o.pos.y,o.pos.z]},10);const H=u("cam1"),F=u({});return(i,b)=>(N(),O("div",null,[v("div",ze,[a(t(ne),{ref_key:"renderer",ref:F,camera:H.value,antialias:!0,"frame-limit":30,"shadow-map-enabled":""},{default:c(()=>[a(t(ie),{name:"cam1",position:[0,6,5],up:[0,0,1]},{default:c(()=>[a(t(k))]),_:1}),a(t(re),{name:"cam2"},{default:c(()=>[a(t(k))]),_:1}),a(t(se),{background:"#f9f9f9"},{default:c(()=>[a(t($e),{position:[0,0,10],intensity:.25,"cast-shadow":!0},null,8,["intensity"]),a(t(xe),{color:16777215}),a(t(ye),{position:t(R)},{default:c(()=>[a(t(we),{color:P.value,"size-attenuation":!1,size:4},null,8,["color"]),a(t(ve),{radius:o.radius,"width-segments":12,"height-segments":12},null,8,["radius"])]),_:1},8,["position"]),a(t(M),{position:s.value,rotation:r.value,scale:[o.s2,o.s2,o.s2],"cast-shadow":!0},{default:c(()=>[a(t(D),null,{default:c(()=>[a(t(oe),{url:"https://threejs.org/examples/textures/crate.gif"})]),_:1}),a(t(_e),{width:_.value+1,height:_.value*2+1},null,8,["width","height"])]),_:1},8,["position","rotation","scale"]),a(t(M),{position:[-8,0,0],scale:[o.s2+.5,1,g.value],"cast-shadow":!0},{default:c(()=>[a(t(D),{color:$.value,side:t(w)},null,8,["color","side"]),a(t(fe),{name:"weirdGeo",vertices:n},null,8,["vertices"])]),_:1},8,["scale"]),a(t(j),{position:[-8,0,0],scale:[o.s2+.5,1,g.value]},{default:c(()=>[a(t(G),{color:"black"}),a(t(T),{geometry:"weirdGeo"})]),_:1},8,["scale"]),a(t(M),{position:[0,0,-3],"receive-shadow":!0},{default:c(()=>[a(t(V),{color:"#aaa",side:t(w)},null,8,["side"]),a(t(ge),{name:"plane",width:o.planeWidth,height:o.planeHeight,"width-segments":3,"height-segments":3},null,8,["width","height"])]),_:1}),a(t(j),{position:[0,0,-3]},{default:c(()=>[a(t(G),{color:"black"}),a(t(T),{geometry:"plane"})]),_:1}),a(t(me),{position:[3,0,0],rotation:[Math.PI/2,Math.cos(Date.now()/1e3)*Math.PI,0],scale:[20,20,20],url:"https://raw.githubusercontent.com/alecjacobson/common-3d-test-models/master/data/stanford-bunny.obj"},{default:c(()=>[a(t(V),{color:z.value,side:t(w)},null,8,["color","side"])]),_:1},8,["rotation"]),a(t(pe),{size:3})]),_:1})]),_:1},8,["camera"])]),v("div",Ae,[v("div",null,[a(t(B),{pane:{title:"Set properties"},onOnPaneCreated:e})]),v("div",null,[a(t(B),{pane:{title:"Props watcher"},onOnPaneCreated:l})])])]))}});const Ce=L('<h1 id="drie" tabindex="-1">Drie <a class="header-anchor" href="#drie" aria-hidden="true">#</a></h1><p>Drie is a Vue 3 component library that makes it easy for developers to add 3D rendering to their web applications using the <a href="https://threejs.org/" target="_blank" rel="noreferrer"><code>three.js</code></a> library. It&#39;s written in TypeScript and uses the Composition API.</p><p>Drie allows for an intuitive and declarative approach to building complex 3D scenes and integrating them into both existing and new Vue projects. Drie aims to be the go-to choice for building 3D web applications with Vue and three.js.</p><p>To start using Drie see the <a href="/getting-started">Getting started</a> page.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><p>Use mouse or touch to rotate the scene. This example illustrates capabilities of Drie.</p>',6),ke=L('<h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-hidden="true">#</a></h2><p>Drie implements components for the common three.js classes. Some additional features not directly implemented in three.js are available as well.</p><p>Notable features include:</p><ul><li>Auto resizing of WebGL canvas (including PerspectiveCamera aspect ratio update)</li><li>Raycasting as mouse events</li><li>FPS Limiter</li><li>Simple usage of geometry utilities (see <a href="./components/Geometries/EdgesGeometry">EdgesGeometry</a> or <a href="./components/Geometries/WireframeGeometry">WireframeGeometry</a>)</li><li>Simple geometries (e.g., <a href="./components/Geometries/BoxGeometry">BoxGeometry</a>) have reactive properties. Drie handles regeneration of the geometry internally.</li></ul><h2 id="authors" tabindex="-1">Authors <a class="header-anchor" href="#authors" aria-hidden="true">#</a></h2>',5),Ue=JSON.parse('{"title":"Drie","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Features","slug":"features","link":"#features","children":[]},{"level":2,"title":"Authors","slug":"authors","link":"#authors","children":[]}],"relativePath":"index.md"}'),De={name:"index.md"},qe=Object.assign(De,{setup(d){const o=[{avatar:"https://avatars.githubusercontent.com/u/26581833",name:"Jan Vorisek",title:"Creator",links:[{icon:"github",link:"https://github.com/janvorisek"},{icon:"twitter",link:"https://twitter.com/janvorisekdev"}]}];return(e,l)=>{const s=ue("ClientOnly");return N(),O("div",null,[Ce,a(s,null,{default:c(()=>[a(Se)]),_:1}),ke,a(t(he),{size:"small",members:o})])}}});export{Ue as __pageData,qe as default};
