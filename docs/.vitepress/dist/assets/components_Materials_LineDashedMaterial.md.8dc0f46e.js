import{s as f,d as n,C as u,_ as g,a as S,c as z,b as x}from"./chunks/TextureLoader.vue_vue_type_script_setup_true_lang.9a3cc64b.js";import{_ as b}from"./chunks/PerspectiveCamera.vue_vue_type_script_setup_true_lang.85206f0b.js";import{_ as T}from"./chunks/LineSegments.vue_vue_type_script_setup_true_lang.b1063996.js";import{_ as L}from"./chunks/Mesh.vue_vue_type_script_setup_true_lang.d35280e6.js";import{_ as C}from"./chunks/AxesHelper.vue_vue_type_script_setup_true_lang.ab0ce57d.js";import{_ as P}from"./chunks/CircleGeometry.vue_vue_type_script_setup_true_lang.fe5d178b.js";import{_ as $}from"./chunks/EdgesGeometry.vue_vue_type_script_setup_true_lang.3d8064a0.js";import{d as _,i as D,p as v,k as M,o as p,c as h,m as c,a as e,w as r,u as t,e as y,f as m}from"./app.8cb58532.js";import{V as A}from"./chunks/v-tweakpane.e4917e37.js";const k={name:"LineDashedMaterial",render:()=>null},I=_({...k,props:{color:{default:16777215},scale:{default:1},dashSize:{default:3},gapSize:{default:1}},setup(l,{expose:s}){const a=l,o=D("mesh"),d=new f({color:a.color});o.material=d;function i(){d.color=new u(a.color),d.scale=a.scale,d.dashSize=a.dashSize,d.gapSize=a.gapSize,d.needsUpdate=!0}return i(),n(a,"color",i),n(a,"scale",i),n(a,"dashSize",i),n(a,"gapSize",i),v("material",d),s({three:d}),{props:a,mesh:o,three:d,applyProps:i}}}),O={class:"example-with-props"},V={class:"example"},w={class:"example-props"},N=_({__name:"LineDashedMaterial",setup(l){const s=M({color:"#000000",scale:1,dashSize:.25,gapSize:.1}),a=o=>{o.addInput(s,"color"),o.addInput(s,"scale",{min:.1,max:2}),o.addInput(s,"dashSize",{min:.01,max:1}),o.addInput(s,"gapSize",{min:.01,max:1})};return(o,d)=>(p(),h("div",O,[c("div",V,[e(t(x),{antialias:!0},{default:r(()=>[e(t(b),{position:[.1,0,2],up:[0,0,1]},{default:r(()=>[e(t(g))]),_:1},8,["position"]),e(t(S),{background:"#f9f9f9"},{default:r(()=>[e(t(L),null,{default:r(()=>[e(t(z),{transparent:!0,opacity:0}),e(t(P),{name:"geo",radius:1})]),_:1}),e(t(T),null,{default:r(()=>[e(t($),{geometry:"geo"}),e(t(I),{color:s.color,scale:s.scale,"dash-size":s.dashSize,"gap-size":s.gapSize},null,8,["color","scale","dash-size","gap-size"])]),_:1}),e(t(C),{size:1})]),_:1})]),_:1})]),c("div",w,[e(t(A),{pane:{title:"Properties"},onOnPaneCreated:a})])]))}});const j=m('<h1 id="linedashedmaterial" tabindex="-1">LineDashedMaterial <a class="header-anchor" href="#linedashedmaterial" aria-hidden="true">#</a></h1><p>A material for drawing dashed line geometries.</p><p>Suitable for <a href="/components/Objects/Line"><code>&lt;Line /&gt;</code></a>, <a href="/components/Objects/LineSegments"><code>&lt;LineSegments /&gt;</code></a> or <a href="/components/Objects/LineLoop"><code>&lt;LineLoop /&gt;</code></a>.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2>',4),E=m('<h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h2><table><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>color </code></td><td>Color of the material.</td><td>union</td><td>0xffffff</td></tr><tr><td><code>scale </code></td><td>The scale of the dashed part of a line.</td><td>number</td><td>1</td></tr><tr><td><code>dashSize </code></td><td>The size of the dash. This is both the gap with the stroke.</td><td>number</td><td>3</td></tr><tr><td><code>gapSize </code></td><td>The size of the gap.</td><td>number</td><td>1</td></tr></tbody></table><hr>',3),W=JSON.parse('{"title":"LineDashedMaterial","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Props","slug":"props","link":"#props","children":[]}],"relativePath":"components/Materials/LineDashedMaterial.md"}'),B={name:"components/Materials/LineDashedMaterial.md"},X=Object.assign(B,{setup(l){return(s,a)=>{const o=y("ClientOnly");return p(),h("div",null,[j,e(o,null,{default:r(()=>[e(N)]),_:1}),E])}}});export{W as __pageData,X as default};
