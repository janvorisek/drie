import{b as k,c as d,_ as x}from"./chunks/TextureLoader.vue_vue_type_script_setup_true_lang.9dbe4f45.js";import{_ as D}from"./chunks/PerspectiveCamera.vue_vue_type_script_setup_true_lang.056ca4bf.js";import{_ as F}from"./chunks/OrbitControls.vue_vue_type_script_setup_true_lang.037923a5.js";import{_ as p}from"./chunks/LineSegments.vue_vue_type_script_setup_true_lang.51e2f96a.js";import{_ as m}from"./chunks/Mesh.vue_vue_type_script_setup_true_lang.f260913a.js";import{_ as j}from"./chunks/AxesHelper.vue_vue_type_script_setup_true_lang.b023c40d.js";import{_ as B}from"./chunks/BoxGeometry.vue_vue_type_script_setup_true_lang.b5b7eb4c.js";import{_ as A}from"./chunks/CircleGeometry.vue_vue_type_script_setup_true_lang.5aee1d6f.js";import{_ as S}from"./chunks/ConeGeometry.vue_vue_type_script_setup_true_lang.1acb3a89.js";import{_ as $}from"./chunks/CylinderGeometry.vue_vue_type_script_setup_true_lang.41443785.js";import{_ as P}from"./chunks/PlaneGeometry.vue_vue_type_script_setup_true_lang.54f934ec.js";import{_ as T}from"./chunks/RingGeometry.vue_vue_type_script_setup_true_lang.7e46aae4.js";import{_ as V}from"./chunks/SphereGeometry.vue_vue_type_script_setup_true_lang.5441be63.js";import{_ as h}from"./chunks/WireframeGeometry.vue_vue_type_script_setup_true_lang.b696b97d.js";import{_ as u}from"./chunks/LineBasicMaterial.vue_vue_type_script_setup_true_lang.3654d2e2.js";import{V as E}from"./chunks/v-tweakpane.2e9e58e6.js";import{d as M,m as w,l as y,o as l,c as v,f,e as t,w as a,u as e,y as i,z as c,b as R,a as b}from"./app.3db908d8.js";const z={class:"example-with-props"},N={class:"example"},O={class:"example-props"},I=M({__name:"Mesh",setup(g){const o=w({color:"#666666",object:"BoxGeometry",position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},scale:{x:1,y:1,z:1}}),r=y([0,0,0]),s=y([0,0,0]),n=y([1,1,1]),C=()=>{r.value=[o.position.x,o.position.y,o.position.z],s.value=[o.rotation.x,o.rotation.y,o.rotation.z],n.value=[o.scale.x,o.scale.y,o.scale.z]},G=_=>{_.addInput(o,"object",{label:"geometry",options:{BoxGeometry:"BoxGeometry",CircleGeometry:"CircleGeometry",ConeGeometry:"ConeGeometry",CylinderGeometry:"CylinderGeometry",PlaneGeometry:"PlaneGeometry",RingGeometry:"RingGeometry",SphereGeometry:"SphereGeometry"}}),_.addInput(o,"position"),_.addInput(o,"rotation"),_.addInput(o,"scale",{x:{min:0},y:{min:0},z:{min:0}})};return(_,W)=>(l(),v("div",z,[f("div",N,[t(e(x),{antialias:!0,"on-before-render":C},{default:a(()=>[t(e(D),{position:[0,2,3]},{default:a(()=>[t(e(F))]),_:1}),t(e(k),{background:"#f9f9f9"},{default:a(()=>[o.object==="CircleGeometry"?(l(),i(e(m),{key:0,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(d),{color:o.color},null,8,["color"]),t(e(A),{name:"CircleGeometry"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="CircleGeometry"?(l(),i(e(p),{key:1,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(h),{geometry:"CircleGeometry"}),t(e(u),{color:"black"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="BoxGeometry"?(l(),i(e(m),{key:2,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(d),{color:o.color},null,8,["color"]),t(e(B),{name:"BoxGeometry"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="BoxGeometry"?(l(),i(e(p),{key:3,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(h),{geometry:"BoxGeometry"}),t(e(u),{color:"black"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="ConeGeometry"?(l(),i(e(m),{key:4,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(d),{color:o.color},null,8,["color"]),t(e(S),{name:"ConeGeometry"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="ConeGeometry"?(l(),i(e(p),{key:5,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(h),{geometry:"ConeGeometry"}),t(e(u),{color:"black"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="CylinderGeometry"?(l(),i(e(m),{key:6,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(d),{color:o.color},null,8,["color"]),t(e($),{name:"CylinderGeometry"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="CylinderGeometry"?(l(),i(e(p),{key:7,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(h),{geometry:"CylinderGeometry"}),t(e(u),{color:"black"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="PlaneGeometry"?(l(),i(e(m),{key:8,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(d),{color:o.color},null,8,["color"]),t(e(P),{name:"PlaneGeometry"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="PlaneGeometry"?(l(),i(e(p),{key:9,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(h),{geometry:"PlaneGeometry"}),t(e(u),{color:"black"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="RingGeometry"?(l(),i(e(m),{key:10,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(d),{color:o.color},null,8,["color"]),t(e(T),{name:"RingGeometry"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="RingGeometry"?(l(),i(e(p),{key:11,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(h),{geometry:"RingGeometry"}),t(e(u),{color:"black"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="SphereGeometry"?(l(),i(e(m),{key:12,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(d),{color:o.color},null,8,["color"]),t(e(V),{name:"SphereGeometry"})]),_:1},8,["position","rotation","scale"])):c("",!0),o.object==="SphereGeometry"?(l(),i(e(p),{key:13,position:r.value,rotation:s.value,scale:n.value},{default:a(()=>[t(e(h),{geometry:"SphereGeometry"}),t(e(u),{color:"black"})]),_:1},8,["position","rotation","scale"])):c("",!0),t(e(j),{size:2})]),_:1})]),_:1})]),f("div",O,[t(e(E),{pane:{title:"Properties"},onOnPaneCreated:G})])]))}});const q=b('<h1 id="mesh" tabindex="-1">Mesh <a class="header-anchor" href="#mesh" aria-hidden="true">#</a></h1><p>A component representing triangular mesh. Each triangle in the mesh is defined by three vertices, which are connected by edges to form the surface of the object.</p><p>Mesh is composed of a <a href="/using-components/geometries">geometry</a>, which defines the shape of the object, and a <a href="/using-components/materials">material</a>, which defines the appearance of the object.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2>',4),L=b(`<h3 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h3><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Mesh</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- Use any supported mesh material --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MeshBasicMaterial</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">color</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- Use any supported geometry --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">BoxGeometry</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Mesh</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h2><table><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>castShadow </code></td><td>Whether the object gets rendered into shadow map.</td><td>boolean</td><td>false</td></tr><tr><td><code>geometry </code></td><td>Optional name of the geometry.<br>This allows reusing of the geometry.</td><td>union</td><td>null</td></tr><tr><td><code>material </code></td><td>Optional name of the material.<br>This allows reusing of the material.</td><td>union</td><td>null</td></tr><tr><td><code>name </code></td><td>Name of the Mesh.</td><td>string</td><td>&quot;&quot;</td></tr><tr><td><code>position </code></td><td>A <a href="/advanced/types#vector3like">Vector3Like</a> representing the object&#39;s local position.</td><td>Vector3Like</td><td>[0, 0, 0]</td></tr><tr><td><code>receiveShadow</code></td><td>Whether the material receives shadows.</td><td>boolean</td><td>false</td></tr><tr><td><code>rotation </code></td><td>A <a href="/advanced/types#vector3like">Vector3Like</a> representing local rotation (see Euler angles), in radians.</td><td>Vector3Like</td><td>[0, 0, 0]</td></tr><tr><td><code>scale </code></td><td>A <a href="/advanced/types#vector3like">Vector3Like</a> representing the object&#39;s local scale.</td><td>Vector3Like</td><td>[1, 1, 1]</td></tr></tbody></table><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th><th>Bindings</th></tr></thead><tbody><tr><td>default</td><td></td><td></td></tr></tbody></table><h2 id="expose" tabindex="-1">Expose <a class="header-anchor" href="#expose" aria-hidden="true">#</a></h2><h3 id="three" tabindex="-1">three <a class="header-anchor" href="#three" aria-hidden="true">#</a></h3><blockquote></blockquote><hr>`,10),de=JSON.parse('{"title":"Mesh","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[{"level":3,"title":"Code","slug":"code","link":"#code","children":[]}]},{"level":2,"title":"Props","slug":"props","link":"#props","children":[]},{"level":2,"title":"Slots","slug":"slots","link":"#slots","children":[]},{"level":2,"title":"Expose","slug":"expose","link":"#expose","children":[{"level":3,"title":"three","slug":"three","link":"#three","children":[]}]}],"relativePath":"components/Objects/Mesh.md"}'),U={name:"components/Objects/Mesh.md"},pe=Object.assign(U,{setup(g){return(o,r)=>{const s=R("ClientOnly");return l(),v("div",null,[q,t(s,null,{default:a(()=>[t(I)]),_:1}),L])}}});export{de as __pageData,pe as default};
