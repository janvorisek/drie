import{B as c,q as o,j as p}from"./TextureLoader.vue_vue_type_script_setup_true_lang.1af3dfe2.js";import{d as A,k as v,i as f,g as i}from"../app.a90b9b83.js";const w={name:"BufferGeometry",render:()=>null},g=A({...w,props:{name:{default:""},vertices:{default:()=>[]},faces:{default:()=>[]},uvs:{default:()=>[]},normals:{type:[Array,Boolean],default:!1}},setup(l,{expose:d}){const e=l;function m(){console.log("make");const t=new c,y=new Float32Array(e.vertices);if(t.setAttribute("position",new o(y,3)),e.uvs.length>0){const n=new Float32Array(e.uvs);t.setAttribute("uv",new o(n,2))}if(e.normals===!0&&(t.computeVertexNormals(),t.attributes.normal.needsUpdate=!0),Array.isArray(e.normals)){const n=new Float32Array(e.normals);t.setAttribute("normal",new o(n,3))}return e.faces.length>0&&t.setIndex(e.faces),t}const r=v(new c);r.name=e.name;const s=f("mesh",null);s&&(s.geometry=r);const u=f("addGeometry");u(r);function a(){const t=m();p(r,t)}return a(),i(()=>e.vertices,t=>{a()},{deep:!0}),i(()=>e.faces,t=>{a()},{deep:!0}),d({three:r}),{props:e,makeGeometry:m,three:r,mesh:s,addGeometry:u,redoGeometry:a}}});export{g as _};
