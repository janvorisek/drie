import{_ as l,k as h,a as p}from"./chunks/TextureLoader.vue_vue_type_script_setup_true_lang.81a03308.js";import{_ as m}from"./chunks/PerspectiveCamera.vue_vue_type_script_setup_true_lang.82061314.js";import{_}from"./chunks/OrbitControls.vue_vue_type_script_setup_true_lang.ccc9ebb4.js";import{_ as f}from"./chunks/OBJLoader.vue_vue_type_script_setup_true_lang.8f597d5c.js";import{_ as b}from"./chunks/AxesHelper.vue_vue_type_script_setup_true_lang.f64f7778.js";import{d as u,o,c as d,a as e,w as r,u as t,e as g,f as a}from"./app.eb4aa22f.js";const y={class:"example"},v=u({__name:"OBJLoader",setup(s){return(n,c)=>(o(),d("div",y,[e(t(p),{ref:"renderer",antialias:!0},{default:r(()=>[e(t(m),{position:[3,3,5],up:[0,0,1]},{default:r(()=>[e(t(_))]),_:1}),e(t(l),{background:"#f9f9f9"},{default:r(()=>[e(t(f),{position:[0,0,-1.6],rotation:[Math.PI/2,Math.PI,0],scale:[20,20,20],url:"https://raw.githubusercontent.com/alecjacobson/common-3d-test-models/master/data/stanford-bunny.obj"},{default:r(()=>[e(t(h))]),_:1},8,["position","rotation"]),e(t(b),{size:3})]),_:1})]),_:1},512)]))}}),E=a('<h1 id="objloader" tabindex="-1">OBJLoader <a class="header-anchor" href="#objloader" aria-hidden="true">#</a></h1><p>This component allows you to load and display 3D models in the <code>.obj</code> file format.</p><p><code>&lt;OBJLoader&gt;</code> behaves as a <a href="/components/Objects/Group"><code>&lt;Group&gt;</code></a>.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2>',4),k=a('<h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h2><table><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>castShadow </code></td><td>Whether the object gets rendered into shadow map.</td><td>boolean</td><td>false</td></tr><tr><td><code>enableRaycasting</code></td><td>Component will emit mouse events when raycasting is enabled</td><td>boolean</td><td>false</td></tr><tr><td><code>position </code></td><td>A <a href="/types#vector3like">Vector3Like</a> representing the object&#39;s local position.</td><td>Vector3Like</td><td>[0, 0, 0]</td></tr><tr><td><code>receiveShadow </code></td><td>Whether the material receives shadows.</td><td>boolean</td><td>false</td></tr><tr><td><code>rotation </code></td><td>A <a href="/types#vector3like">Vector3Like</a> representing local rotation (see Euler angles), in radians.</td><td>Vector3Like</td><td>[0, 0, 0]</td></tr><tr><td><code>scale </code></td><td>A <a href="/types#vector3like">Vector3Like</a> representing the object&#39;s local scale.</td><td>Vector3Like</td><td>[1, 1, 1]</td></tr><tr><td><code>url </code></td><td>A string containing the path/URL of the <code>.obj</code> file.</td><td>string</td><td></td></tr></tbody></table><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h2><table><thead><tr><th>Event name</th><th>Properties</th><th>Description</th></tr></thead><tbody><tr><td>load</td><td><strong>group</strong> <code>Group</code> - An instance of <code>THREE.Group</code></td><td>Emitted when OBJ file is successfuly loaded, parsed and added to the scene.</td></tr><tr><td>progress</td><td></td><td>Emmited on XHR progress</td></tr><tr><td>error</td><td></td><td>Emitted on XHR error or OBJ parsing error</td></tr><tr><td>click</td><td><strong>is</strong> <code>Intersection[]</code> - An array of <a href="https://github.com/three-types/three-ts-types/blob/master/types/three/src/core/Raycaster.d.ts#L16" target="_blank" rel="noreferrer"><code>Intersection</code></a> being clicked.<br><strong>pointer</strong> <code>Vector2</code> - A <code>THREE.Vector2</code> representing relative element coordinates on the canvas</td><td>Emitted when Object3Ds are clicked.</td></tr><tr><td>mousemove</td><td><strong>is</strong> <code>Intersection[]</code> - An array of <a href="https://github.com/three-types/three-ts-types/blob/master/types/three/src/core/Raycaster.d.ts#L16" target="_blank" rel="noreferrer"><code>Intersection</code></a> mousemoved over.<br><strong>pointer</strong> <code>Vector2</code> - A <code>THREE.Vector2</code> representing relative element coordinates on the canvas</td><td>Emitted when mouse is moved over Object3Ds.</td></tr><tr><td>mouseenter</td><td><strong>is</strong> <code>Intersection[]</code> - An array of <a href="https://github.com/three-types/three-ts-types/blob/master/types/three/src/core/Raycaster.d.ts#L16" target="_blank" rel="noreferrer"><code>Intersection</code></a> entered by mouse.<br><strong>pointer</strong> <code>Vector2</code> - A <code>THREE.Vector2</code> representing relative element coordinates on the canvas</td><td>Emitted when mouse enters Object3Ds.</td></tr><tr><td>mouseleave</td><td><strong>is</strong> <code>Intersection[]</code> - An array of <a href="https://github.com/three-types/three-ts-types/blob/master/types/three/src/core/Raycaster.d.ts#L16" target="_blank" rel="noreferrer"><code>Intersection</code></a> left by mouse.<br><strong>pointer</strong> <code>Vector2</code> - A <code>THREE.Vector2</code> representing relative element coordinates on the canvas</td><td>Emitted when mouse leaves Object3Ds.</td></tr></tbody></table><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th><th>Bindings</th></tr></thead><tbody><tr><td>default</td><td></td><td></td></tr></tbody></table><hr>',7),w=JSON.parse('{"title":"OBJLoader","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Props","slug":"props","link":"#props","children":[]},{"level":2,"title":"Events","slug":"events","link":"#events","children":[]},{"level":2,"title":"Slots","slug":"slots","link":"#slots","children":[]}],"relativePath":"components/Loaders/OBJLoader.md"}'),V={name:"components/Loaders/OBJLoader.md"},R=Object.assign(V,{setup(s){return(n,c)=>{const i=g("ClientOnly");return o(),d("div",null,[E,e(i,null,{default:r(()=>[e(v)]),_:1}),k])}}});export{w as __pageData,R as default};
