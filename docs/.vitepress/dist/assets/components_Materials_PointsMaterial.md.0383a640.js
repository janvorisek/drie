import{_ as c,a as p,b as m}from"./chunks/TextureLoader.vue_vue_type_script_setup_true_lang.9a3cc64b.js";import{_ as h}from"./chunks/PerspectiveCamera.vue_vue_type_script_setup_true_lang.85206f0b.js";import{_ as f,a as u}from"./chunks/PointsMaterial.vue_vue_type_script_setup_true_lang.0fc13961.js";import{_ as P}from"./chunks/AxesHelper.vue_vue_type_script_setup_true_lang.ab0ce57d.js";import{_ as x}from"./chunks/BoxGeometry.vue_vue_type_script_setup_true_lang.94b27e49.js";import{V as b}from"./chunks/v-tweakpane.e4917e37.js";import{d as z,k as A,o as r,c as d,m as n,a as t,w as s,u as e,e as T,f as _}from"./app.8cb58532.js";const v={class:"example-with-props"},C={class:"example"},g={class:"example-props"},y=z({__name:"PointsMaterial",setup(l){const a=A({color:"#000000",size:2,sizeAttenuation:!0}),i=o=>{o.addInput(a,"color"),o.addInput(a,"size",{min:1,max:10}),o.addInput(a,"sizeAttenuation")};return(o,V)=>(r(),d("div",v,[n("div",C,[t(e(m),{antialias:!0},{default:s(()=>[t(e(h),{position:[12,12,10],up:[0,0,1]},{default:s(()=>[t(e(c))]),_:1}),t(e(p),{background:"#f9f9f9"},{default:s(()=>[t(e(f),null,{default:s(()=>[t(e(u),{color:a.color,size:a.size,"size-attenuation":a.sizeAttenuation},null,8,["color","size","size-attenuation"]),t(e(x),{name:"geo",width:10,height:10,depth:10})]),_:1}),t(e(P),{size:1})]),_:1})]),_:1})]),n("div",g,[t(e(b),{pane:{title:"Properties"},onOnPaneCreated:i})])]))}});const S=_('<h1 id="pointsmaterial" tabindex="-1">PointsMaterial <a class="header-anchor" href="#pointsmaterial" aria-hidden="true">#</a></h1><p>A material for drawing <a href="/components/Objects/Points"><code>&lt;Points /&gt;</code></a>.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2>',3),$=_('<h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h2><table><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>color </code></td><td>Color of the material.</td><td>union</td><td>0xffffff</td></tr><tr><td><code>sizeAttenuation</code></td><td>Specify whether points&#39; size is attenuated by the camera depth.<br><em>(Perspective camera only)</em></td><td>boolean</td><td>true</td></tr><tr><td><code>size </code></td><td>Defines the size of the points in pixels.</td><td>number</td><td>1</td></tr></tbody></table><hr>',3),B=JSON.parse('{"title":"PointsMaterial","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Props","slug":"props","link":"#props","children":[]}],"relativePath":"components/Materials/PointsMaterial.md"}'),M={name:"components/Materials/PointsMaterial.md"},R=Object.assign(M,{setup(l){return(a,i)=>{const o=T("ClientOnly");return r(),d("div",null,[S,t(o,null,{default:s(()=>[t(y)]),_:1}),$])}}});export{B as __pageData,R as default};
