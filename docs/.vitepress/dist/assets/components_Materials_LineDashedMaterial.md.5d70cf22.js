import{s as f,d as n,C as u,_ as g,a as S,c as z,b}from"./chunks/TextureLoader.vue_vue_type_script_setup_true_lang.d1345e8b.js";import{_ as x}from"./chunks/PerspectiveCamera.vue_vue_type_script_setup_true_lang.f6d7f253.js";import{_ as y}from"./chunks/LineSegments.vue_vue_type_script_setup_true_lang.bb0ce6a4.js";import{_ as T}from"./chunks/Mesh.vue_vue_type_script_setup_true_lang.25d355a3.js";import{_ as L}from"./chunks/AxesHelper.vue_vue_type_script_setup_true_lang.83ea3ce6.js";import{_ as C}from"./chunks/CircleGeometry.vue_vue_type_script_setup_true_lang.3d0a3aab.js";import{_ as D}from"./chunks/EdgesGeometry.vue_vue_type_script_setup_true_lang.c63bbae7.js";import{d as p,i as P,p as $,k as v,o as _,c as h,m as c,a,w as i,u as r,e as M,f as m}from"./app.35f292b2.js";import{V as I}from"./chunks/v-tweakpane.5d5d5a9a.js";const w={name:"LineDashedMaterial",render:()=>null},A=p({...w,props:{color:{default:16777215},scale:{default:1},dashSize:{default:3},gapSize:{default:1},opacity:{default:1},transparent:{type:Boolean,default:!1}},setup(l,{expose:t}){const e=l,s=P("mesh"),o=new f({color:e.color});s.material=o;function d(){o.color=new u(e.color),o.scale=e.scale,o.dashSize=e.dashSize,o.gapSize=e.gapSize,o.opacity=e.opacity,o.transparent=e.transparent,o.needsUpdate=!0}return d(),n(e,"color",d),n(e,"scale",d),n(e,"dashSize",d),n(e,"gapSize",d),n(e,"opacity",d),n(e,"transparent",d),$("material",o),t({three:o}),{props:e,mesh:s,three:o,applyProps:d}}}),k={class:"example-with-props"},O={class:"example"},V={class:"example-props"},N=p({__name:"LineDashedMaterial",setup(l){const t=v({color:"#000000",scale:1,dashSize:.25,gapSize:.1,transparent:!1,opacity:1}),e=s=>{s.addInput(t,"color"),s.addInput(t,"scale",{min:.1,max:2}),s.addInput(t,"dashSize",{min:.01,max:1}),s.addInput(t,"gapSize",{min:.01,max:1}),s.addInput(t,"transparent"),s.addInput(t,"opacity",{min:0,max:1})};return(s,o)=>(_(),h("div",k,[c("div",O,[a(r(b),{antialias:!0},{default:i(()=>[a(r(x),{position:[.1,0,2],up:[0,0,1]},{default:i(()=>[a(r(g))]),_:1},8,["position"]),a(r(S),{background:"#f9f9f9"},{default:i(()=>[a(r(T),null,{default:i(()=>[a(r(z),{transparent:!0,opacity:0}),a(r(C),{name:"geo",radius:1})]),_:1}),a(r(y),null,{default:i(()=>[a(r(D),{geometry:"geo"}),a(r(A),{color:t.color,scale:t.scale,"dash-size":t.dashSize,"gap-size":t.gapSize,transparent:t.transparent,opacity:t.opacity},null,8,["color","scale","dash-size","gap-size","transparent","opacity"])]),_:1}),a(r(L),{size:1})]),_:1})]),_:1})]),c("div",V,[a(r(I),{pane:{title:"Properties"},onOnPaneCreated:e})])]))}});const j=m('<h1 id="linedashedmaterial" tabindex="-1">LineDashedMaterial <a class="header-anchor" href="#linedashedmaterial" aria-hidden="true">#</a></h1><p>A material for drawing dashed line geometries.</p><p>Suitable for <a href="/components/Objects/Line"><code>&lt;Line /&gt;</code></a>, <a href="/components/Objects/LineSegments"><code>&lt;LineSegments /&gt;</code></a> or <a href="/components/Objects/LineLoop"><code>&lt;LineLoop /&gt;</code></a>.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2>',4),E=m('<h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h2><table><thead><tr><th>Prop name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>color </code></td><td>Color of the material.</td><td>union</td><td>0xffffff</td></tr><tr><td><code>scale </code></td><td>The scale of the dashed part of a line.</td><td>number</td><td>1</td></tr><tr><td><code>dashSize </code></td><td>The size of the dash. This is both the gap with the stroke.</td><td>number</td><td>3</td></tr><tr><td><code>gapSize </code></td><td>The size of the gap.</td><td>number</td><td>1</td></tr><tr><td><code>opacity </code></td><td>Float in the range of <code>0.0 - 1.0</code> indicating how transparent the material is.</td><td>number</td><td>1</td></tr><tr><td><code>transparent</code></td><td>Defines whether this material is transparent.</td><td>boolean</td><td>false</td></tr></tbody></table><hr>',3),W=JSON.parse('{"title":"LineDashedMaterial","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Props","slug":"props","link":"#props","children":[]}],"relativePath":"components/Materials/LineDashedMaterial.md"}'),B={name:"components/Materials/LineDashedMaterial.md"},X=Object.assign(B,{setup(l){return(t,e)=>{const s=M("ClientOnly");return _(),h("div",null,[j,a(s,null,{default:i(()=>[a(N)]),_:1}),E])}}});export{W as __pageData,X as default};
